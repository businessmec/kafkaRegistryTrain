spring.application.name=kafka


avro.topic.name=inputTopic
server.port=9081
topic.inputTopic=inputTopic
topic.outputTopic=outputTopic

spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.properties.schema.registry.url=http://localhost:8081
spring.kafka.properties.basic.auth.credentials.source=USER_INFO
spring.kafka.properties.basic.auth.user.info=SCHEMA_REGISTRY_API_KEY:SCHEMA_REGISTRY_SECRET
#spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="KAFKA_API_KEY" password="KAFKA_SCHEMA_REGISTRY";
#spring.kafka.properties.sasl.mechanism=PLAIN
#spring.kafka.properties.security.protocol=SASL_SSL
#spring.kafka.properties.ssl.endpoint.identification.algorithm=https
spring.kafka.consumer.autoOffsetReset=earliest
spring.kafka.consumer.group-id=spring-boot-avro-consumer-id
spring.kafka.consumer.keyDeserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.properties.specific.avro.reader=true
spring.kafka.consumer.properties.schema.registry.url=http://127.0.0.1:8081
spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.consumer.valueDeserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer
spring.kafka.producer.keySerializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.valueSerializer=io.confluent.kafka.serializers.KafkaAvroSerializer
spring.kafka.producer.properties.schema.registry.url=http://127.0.0.1:8081
spring.kafka.consumer.bootstrap-servers=localhost:9092

